<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.staff.dao.mapper.busi.ScoreInfoMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.staff.dao.model.ScoreInfo" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="STAFF_ID" property="staffId" jdbcType="INTEGER" />
    <result column="SCORE_TOTAL" property="scoreTotal" jdbcType="INTEGER" />
    <result column="SCORE_FROZEN" property="scoreFrozen" jdbcType="INTEGER" />
    <result column="SCORE_USED" property="scoreUsed" jdbcType="INTEGER" />
    <result column="SCORE_BALANCE" property="scoreBalance" jdbcType="INTEGER" />
    <result column="STATUS" property="status" jdbcType="CHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="CREATE_STAFF" property="createStaff" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_STAFF" property="updateStaff" jdbcType="INTEGER" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, STAFF_ID, SCORE_TOTAL, SCORE_FROZEN, SCORE_USED, SCORE_BALANCE, STATUS, REMARK, 
    CREATE_STAFF, CREATE_TIME, UPDATE_STAFF, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.staff.dao.model.ScoreInfoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_score_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       limit #{limitClauseStart,jdbcType=INTEGER}, #{limitClauseCount,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_score_info
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_score_info
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zengshi.ecp.staff.dao.model.ScoreInfoCriteria" >
    delete from t_score_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.staff.dao.model.ScoreInfo" >
    insert into t_score_info (ID, STAFF_ID, SCORE_TOTAL, 
      SCORE_FROZEN, SCORE_USED, SCORE_BALANCE, 
      STATUS, REMARK, CREATE_STAFF, 
      CREATE_TIME, UPDATE_STAFF, UPDATE_TIME
      )
    values (#{id,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{scoreTotal,jdbcType=INTEGER}, 
      #{scoreFrozen,jdbcType=INTEGER}, #{scoreUsed,jdbcType=INTEGER}, #{scoreBalance,jdbcType=INTEGER}, 
      #{status,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}, #{createStaff,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateStaff,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.staff.dao.model.ScoreInfo" >
    insert into t_score_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="staffId != null" >
        STAFF_ID,
      </if>
      <if test="scoreTotal != null" >
        SCORE_TOTAL,
      </if>
      <if test="scoreFrozen != null" >
        SCORE_FROZEN,
      </if>
      <if test="scoreUsed != null" >
        SCORE_USED,
      </if>
      <if test="scoreBalance != null" >
        SCORE_BALANCE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="scoreTotal != null" >
        #{scoreTotal,jdbcType=INTEGER},
      </if>
      <if test="scoreFrozen != null" >
        #{scoreFrozen,jdbcType=INTEGER},
      </if>
      <if test="scoreUsed != null" >
        #{scoreUsed,jdbcType=INTEGER},
      </if>
      <if test="scoreBalance != null" >
        #{scoreBalance,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.staff.dao.model.ScoreInfoCriteria" resultType="java.lang.Long" >
    select count(*) from t_score_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_score_info
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null" >
        STAFF_ID = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.scoreTotal != null" >
        SCORE_TOTAL = #{record.scoreTotal,jdbcType=INTEGER},
      </if>
      <if test="record.scoreFrozen != null" >
        SCORE_FROZEN = #{record.scoreFrozen,jdbcType=INTEGER},
      </if>
      <if test="record.scoreUsed != null" >
        SCORE_USED = #{record.scoreUsed,jdbcType=INTEGER},
      </if>
      <if test="record.scoreBalance != null" >
        SCORE_BALANCE = #{record.scoreBalance,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createStaff != null" >
        CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateStaff != null" >
        UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_score_info
    set ID = #{record.id,jdbcType=INTEGER},
      STAFF_ID = #{record.staffId,jdbcType=INTEGER},
      SCORE_TOTAL = #{record.scoreTotal,jdbcType=INTEGER},
      SCORE_FROZEN = #{record.scoreFrozen,jdbcType=INTEGER},
      SCORE_USED = #{record.scoreUsed,jdbcType=INTEGER},
      SCORE_BALANCE = #{record.scoreBalance,jdbcType=INTEGER},
      STATUS = #{record.status,jdbcType=CHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.staff.dao.model.ScoreInfo" >
    update t_score_info
    <set >
      <if test="staffId != null" >
        STAFF_ID = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="scoreTotal != null" >
        SCORE_TOTAL = #{scoreTotal,jdbcType=INTEGER},
      </if>
      <if test="scoreFrozen != null" >
        SCORE_FROZEN = #{scoreFrozen,jdbcType=INTEGER},
      </if>
      <if test="scoreUsed != null" >
        SCORE_USED = #{scoreUsed,jdbcType=INTEGER},
      </if>
      <if test="scoreBalance != null" >
        SCORE_BALANCE = #{scoreBalance,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.staff.dao.model.ScoreInfo" >
    update t_score_info
    set STAFF_ID = #{staffId,jdbcType=INTEGER},
      SCORE_TOTAL = #{scoreTotal,jdbcType=INTEGER},
      SCORE_FROZEN = #{scoreFrozen,jdbcType=INTEGER},
      SCORE_USED = #{scoreUsed,jdbcType=INTEGER},
      SCORE_BALANCE = #{scoreBalance,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=CHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="insertBatch" parameterType="com.zengshi.ecp.staff.dao.model.ScoreInfo" >
    insert into t_score_info (ID, 
      STAFF_ID, SCORE_TOTAL, SCORE_FROZEN, 
      SCORE_USED, SCORE_BALANCE, STATUS, 
      REMARK, CREATE_STAFF, CREATE_TIME, 
      UPDATE_STAFF, UPDATE_TIME)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.id,jdbcType=INTEGER}, 
      #{item.staffId,jdbcType=INTEGER}, #{item.scoreTotal,jdbcType=INTEGER}, #{item.scoreFrozen,jdbcType=INTEGER}, 
      #{item.scoreUsed,jdbcType=INTEGER}, #{item.scoreBalance,jdbcType=INTEGER}, #{item.status,jdbcType=CHAR}, 
      #{item.remark,jdbcType=VARCHAR}, #{item.createStaff,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, 
      #{item.updateStaff,jdbcType=INTEGER}, #{item.updateTime,jdbcType=TIMESTAMP})</foreach>
  </insert>
</mapper>