<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.staff.dao.mapper.common.ScoreFuncDefMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.staff.dao.model.ScoreFuncDef" >
    <id column="FUNC_ID" property="funcId" jdbcType="INTEGER" />
    <result column="FUNC_NAME" property="funcName" jdbcType="VARCHAR" />
    <result column="ACTION_TYPE" property="actionType" jdbcType="VARCHAR" />
    <result column="SCORE_TYPE" property="scoreType" jdbcType="VARCHAR" />
    <result column="CAL_PRI" property="calPri" jdbcType="INTEGER" />
    <result column="STATUS" property="status" jdbcType="CHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_STAFF" property="createStaff" jdbcType="INTEGER" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_STAFF" property="updateStaff" jdbcType="INTEGER" />
    <result column="CLASS_BEAN_ID" property="classBeanId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    FUNC_ID, FUNC_NAME, ACTION_TYPE, SCORE_TYPE, CAL_PRI, STATUS, REMARK, CREATE_TIME, 
    CREATE_STAFF, UPDATE_TIME, UPDATE_STAFF, CLASS_BEAN_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.staff.dao.model.ScoreFuncDefCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_score_func_def
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       limit #{limitClauseStart,jdbcType=INTEGER}, #{limitClauseCount,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_score_func_def
    where FUNC_ID = #{funcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_score_func_def
    where FUNC_ID = #{funcId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zengshi.ecp.staff.dao.model.ScoreFuncDefCriteria" >
    delete from t_score_func_def
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.staff.dao.model.ScoreFuncDef" >
    insert into t_score_func_def (FUNC_ID, FUNC_NAME, ACTION_TYPE, 
      SCORE_TYPE, CAL_PRI, STATUS, 
      REMARK, CREATE_TIME, CREATE_STAFF, 
      UPDATE_TIME, UPDATE_STAFF, CLASS_BEAN_ID
      )
    values (#{funcId,jdbcType=INTEGER}, #{funcName,jdbcType=VARCHAR}, #{actionType,jdbcType=VARCHAR}, 
      #{scoreType,jdbcType=VARCHAR}, #{calPri,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createStaff,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateStaff,jdbcType=INTEGER}, #{classBeanId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.staff.dao.model.ScoreFuncDef" >
    insert into t_score_func_def
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="funcId != null" >
        FUNC_ID,
      </if>
      <if test="funcName != null" >
        FUNC_NAME,
      </if>
      <if test="actionType != null" >
        ACTION_TYPE,
      </if>
      <if test="scoreType != null" >
        SCORE_TYPE,
      </if>
      <if test="calPri != null" >
        CAL_PRI,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF,
      </if>
      <if test="classBeanId != null" >
        CLASS_BEAN_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="funcId != null" >
        #{funcId,jdbcType=INTEGER},
      </if>
      <if test="funcName != null" >
        #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="actionType != null" >
        #{actionType,jdbcType=VARCHAR},
      </if>
      <if test="scoreType != null" >
        #{scoreType,jdbcType=VARCHAR},
      </if>
      <if test="calPri != null" >
        #{calPri,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="classBeanId != null" >
        #{classBeanId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.staff.dao.model.ScoreFuncDefCriteria" resultType="java.lang.Long" >
    select count(*) from t_score_func_def
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_score_func_def
    <set >
      <if test="record.funcId != null" >
        FUNC_ID = #{record.funcId,jdbcType=INTEGER},
      </if>
      <if test="record.funcName != null" >
        FUNC_NAME = #{record.funcName,jdbcType=VARCHAR},
      </if>
      <if test="record.actionType != null" >
        ACTION_TYPE = #{record.actionType,jdbcType=VARCHAR},
      </if>
      <if test="record.scoreType != null" >
        SCORE_TYPE = #{record.scoreType,jdbcType=VARCHAR},
      </if>
      <if test="record.calPri != null" >
        CAL_PRI = #{record.calPri,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createStaff != null" >
        CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateStaff != null" >
        UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER},
      </if>
      <if test="record.classBeanId != null" >
        CLASS_BEAN_ID = #{record.classBeanId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_score_func_def
    set FUNC_ID = #{record.funcId,jdbcType=INTEGER},
      FUNC_NAME = #{record.funcName,jdbcType=VARCHAR},
      ACTION_TYPE = #{record.actionType,jdbcType=VARCHAR},
      SCORE_TYPE = #{record.scoreType,jdbcType=VARCHAR},
      CAL_PRI = #{record.calPri,jdbcType=INTEGER},
      STATUS = #{record.status,jdbcType=CHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER},
      CLASS_BEAN_ID = #{record.classBeanId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.staff.dao.model.ScoreFuncDef" >
    update t_score_func_def
    <set >
      <if test="funcName != null" >
        FUNC_NAME = #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="actionType != null" >
        ACTION_TYPE = #{actionType,jdbcType=VARCHAR},
      </if>
      <if test="scoreType != null" >
        SCORE_TYPE = #{scoreType,jdbcType=VARCHAR},
      </if>
      <if test="calPri != null" >
        CAL_PRI = #{calPri,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="classBeanId != null" >
        CLASS_BEAN_ID = #{classBeanId,jdbcType=VARCHAR},
      </if>
    </set>
    where FUNC_ID = #{funcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.staff.dao.model.ScoreFuncDef" >
    update t_score_func_def
    set FUNC_NAME = #{funcName,jdbcType=VARCHAR},
      ACTION_TYPE = #{actionType,jdbcType=VARCHAR},
      SCORE_TYPE = #{scoreType,jdbcType=VARCHAR},
      CAL_PRI = #{calPri,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=CHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER},
      CLASS_BEAN_ID = #{classBeanId,jdbcType=VARCHAR}
    where FUNC_ID = #{funcId,jdbcType=INTEGER}
  </update>
</mapper>