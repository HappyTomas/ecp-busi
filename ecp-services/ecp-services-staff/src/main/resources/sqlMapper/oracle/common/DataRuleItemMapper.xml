<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.staff.dao.mapper.common.DataRuleItemMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.staff.dao.model.DataRuleItem" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="FIELD_NAME" property="fieldName" jdbcType="VARCHAR" />
    <result column="ATTR_NAME" property="attrName" jdbcType="VARCHAR" />
    <result column="VALUE_TYPE" property="valueType" jdbcType="VARCHAR" />
    <result column="VIEW_TYPE" property="viewType" jdbcType="VARCHAR" />
    <result column="DEFAULT_VALUE" property="defaultValue" jdbcType="VARCHAR" />
    <result column="INIT_VALUE" property="initValue" jdbcType="VARCHAR" />
    <result column="VALUE_FORMATE" property="valueFormate" jdbcType="VARCHAR" />
    <result column="ORDER_BY" property="orderBy" jdbcType="INTEGER" />
    <result column="FUNC_ID" property="funcId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, NAME, FIELD_NAME, ATTR_NAME, VALUE_TYPE, VIEW_TYPE, DEFAULT_VALUE, INIT_VALUE, 
    VALUE_FORMATE, ORDER_BY, FUNC_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.staff.dao.model.DataRuleItemCriteria" >
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       select * from (select t_1.*,rownum as row_num from (
    </if>
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_data_rule_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       <![CDATA[ ) t_1 where rownum<=#{limitClauseCount,jdbcType=INTEGER} + #{limitClauseStart,jdbcType=INTEGER}) t_2 where t_2.row_num>#{limitClauseStart,jdbcType=INTEGER}]]>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_data_rule_item
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_data_rule_item
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zengshi.ecp.staff.dao.model.DataRuleItemCriteria" >
    delete from t_data_rule_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.staff.dao.model.DataRuleItem" >
    insert into t_data_rule_item (ID, NAME, FIELD_NAME, 
      ATTR_NAME, VALUE_TYPE, VIEW_TYPE, 
      DEFAULT_VALUE, INIT_VALUE, VALUE_FORMATE, 
      ORDER_BY, FUNC_ID)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{fieldName,jdbcType=VARCHAR}, 
      #{attrName,jdbcType=VARCHAR}, #{valueType,jdbcType=VARCHAR}, #{viewType,jdbcType=VARCHAR}, 
      #{defaultValue,jdbcType=VARCHAR}, #{initValue,jdbcType=VARCHAR}, #{valueFormate,jdbcType=VARCHAR}, 
      #{orderBy,jdbcType=INTEGER}, #{funcId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.staff.dao.model.DataRuleItem" >
    insert into t_data_rule_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="fieldName != null" >
        FIELD_NAME,
      </if>
      <if test="attrName != null" >
        ATTR_NAME,
      </if>
      <if test="valueType != null" >
        VALUE_TYPE,
      </if>
      <if test="viewType != null" >
        VIEW_TYPE,
      </if>
      <if test="defaultValue != null" >
        DEFAULT_VALUE,
      </if>
      <if test="initValue != null" >
        INIT_VALUE,
      </if>
      <if test="valueFormate != null" >
        VALUE_FORMATE,
      </if>
      <if test="orderBy != null" >
        ORDER_BY,
      </if>
      <if test="funcId != null" >
        FUNC_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null" >
        #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="attrName != null" >
        #{attrName,jdbcType=VARCHAR},
      </if>
      <if test="valueType != null" >
        #{valueType,jdbcType=VARCHAR},
      </if>
      <if test="viewType != null" >
        #{viewType,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null" >
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="initValue != null" >
        #{initValue,jdbcType=VARCHAR},
      </if>
      <if test="valueFormate != null" >
        #{valueFormate,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null" >
        #{orderBy,jdbcType=INTEGER},
      </if>
      <if test="funcId != null" >
        #{funcId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.staff.dao.model.DataRuleItemCriteria" resultType="java.lang.Long" >
    select count(*) from t_data_rule_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_data_rule_item
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldName != null" >
        FIELD_NAME = #{record.fieldName,jdbcType=VARCHAR},
      </if>
      <if test="record.attrName != null" >
        ATTR_NAME = #{record.attrName,jdbcType=VARCHAR},
      </if>
      <if test="record.valueType != null" >
        VALUE_TYPE = #{record.valueType,jdbcType=VARCHAR},
      </if>
      <if test="record.viewType != null" >
        VIEW_TYPE = #{record.viewType,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultValue != null" >
        DEFAULT_VALUE = #{record.defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="record.initValue != null" >
        INIT_VALUE = #{record.initValue,jdbcType=VARCHAR},
      </if>
      <if test="record.valueFormate != null" >
        VALUE_FORMATE = #{record.valueFormate,jdbcType=VARCHAR},
      </if>
      <if test="record.orderBy != null" >
        ORDER_BY = #{record.orderBy,jdbcType=INTEGER},
      </if>
      <if test="record.funcId != null" >
        FUNC_ID = #{record.funcId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_data_rule_item
    set ID = #{record.id,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=VARCHAR},
      FIELD_NAME = #{record.fieldName,jdbcType=VARCHAR},
      ATTR_NAME = #{record.attrName,jdbcType=VARCHAR},
      VALUE_TYPE = #{record.valueType,jdbcType=VARCHAR},
      VIEW_TYPE = #{record.viewType,jdbcType=VARCHAR},
      DEFAULT_VALUE = #{record.defaultValue,jdbcType=VARCHAR},
      INIT_VALUE = #{record.initValue,jdbcType=VARCHAR},
      VALUE_FORMATE = #{record.valueFormate,jdbcType=VARCHAR},
      ORDER_BY = #{record.orderBy,jdbcType=INTEGER},
      FUNC_ID = #{record.funcId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.staff.dao.model.DataRuleItem" >
    update t_data_rule_item
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null" >
        FIELD_NAME = #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="attrName != null" >
        ATTR_NAME = #{attrName,jdbcType=VARCHAR},
      </if>
      <if test="valueType != null" >
        VALUE_TYPE = #{valueType,jdbcType=VARCHAR},
      </if>
      <if test="viewType != null" >
        VIEW_TYPE = #{viewType,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null" >
        DEFAULT_VALUE = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="initValue != null" >
        INIT_VALUE = #{initValue,jdbcType=VARCHAR},
      </if>
      <if test="valueFormate != null" >
        VALUE_FORMATE = #{valueFormate,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null" >
        ORDER_BY = #{orderBy,jdbcType=INTEGER},
      </if>
      <if test="funcId != null" >
        FUNC_ID = #{funcId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.staff.dao.model.DataRuleItem" >
    update t_data_rule_item
    set NAME = #{name,jdbcType=VARCHAR},
      FIELD_NAME = #{fieldName,jdbcType=VARCHAR},
      ATTR_NAME = #{attrName,jdbcType=VARCHAR},
      VALUE_TYPE = #{valueType,jdbcType=VARCHAR},
      VIEW_TYPE = #{viewType,jdbcType=VARCHAR},
      DEFAULT_VALUE = #{defaultValue,jdbcType=VARCHAR},
      INIT_VALUE = #{initValue,jdbcType=VARCHAR},
      VALUE_FORMATE = #{valueFormate,jdbcType=VARCHAR},
      ORDER_BY = #{orderBy,jdbcType=INTEGER},
      FUNC_ID = #{funcId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>