<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.staff.dao.mapper.busi.ScoreExchangeMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.staff.dao.model.ScoreExchange" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="EXCHANGE_MODE" property="exchangeMode" jdbcType="VARCHAR" />
    <result column="STAFF_ID" property="staffId" jdbcType="INTEGER" />
    <result column="ORDER_ID" property="orderId" jdbcType="VARCHAR" />
    <result column="SUB_ORDER_ID" property="subOrderId" jdbcType="VARCHAR" />
    <result column="SCORE_USING" property="scoreUsing" jdbcType="INTEGER" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="CREATE_STAFF" property="createStaff" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="BACK_FLAG" property="backFlag" jdbcType="CHAR" />
    <result column="SITE_ID" property="siteId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, EXCHANGE_MODE, STAFF_ID, ORDER_ID, SUB_ORDER_ID, SCORE_USING, REMARK, CREATE_STAFF, 
    CREATE_TIME, BACK_FLAG, SITE_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.staff.dao.model.ScoreExchangeCriteria" >
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       select * from (select t_1.*,rownum as row_num from (
    </if>
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_score_exchange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       <![CDATA[ ) t_1 where rownum<=#{limitClauseCount,jdbcType=INTEGER} + #{limitClauseStart,jdbcType=INTEGER}) t_2 where t_2.row_num>#{limitClauseStart,jdbcType=INTEGER}]]>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_score_exchange
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_score_exchange
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zengshi.ecp.staff.dao.model.ScoreExchangeCriteria" >
    delete from t_score_exchange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.staff.dao.model.ScoreExchange" >
    insert into t_score_exchange (ID, EXCHANGE_MODE, STAFF_ID, 
      ORDER_ID, SUB_ORDER_ID, SCORE_USING, 
      REMARK, CREATE_STAFF, CREATE_TIME, 
      BACK_FLAG, SITE_ID)
    values (#{id,jdbcType=INTEGER}, #{exchangeMode,jdbcType=VARCHAR}, #{staffId,jdbcType=INTEGER}, 
      #{orderId,jdbcType=VARCHAR}, #{subOrderId,jdbcType=VARCHAR}, #{scoreUsing,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createStaff,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{backFlag,jdbcType=CHAR}, #{siteId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.staff.dao.model.ScoreExchange" >
    insert into t_score_exchange
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="exchangeMode != null" >
        EXCHANGE_MODE,
      </if>
      <if test="staffId != null" >
        STAFF_ID,
      </if>
      <if test="orderId != null" >
        ORDER_ID,
      </if>
      <if test="subOrderId != null" >
        SUB_ORDER_ID,
      </if>
      <if test="scoreUsing != null" >
        SCORE_USING,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="backFlag != null" >
        BACK_FLAG,
      </if>
      <if test="siteId != null" >
        SITE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="exchangeMode != null" >
        #{exchangeMode,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="subOrderId != null" >
        #{subOrderId,jdbcType=VARCHAR},
      </if>
      <if test="scoreUsing != null" >
        #{scoreUsing,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backFlag != null" >
        #{backFlag,jdbcType=CHAR},
      </if>
      <if test="siteId != null" >
        #{siteId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.staff.dao.model.ScoreExchangeCriteria" resultType="java.lang.Long" >
    select count(*) from t_score_exchange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_score_exchange
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.exchangeMode != null" >
        EXCHANGE_MODE = #{record.exchangeMode,jdbcType=VARCHAR},
      </if>
      <if test="record.staffId != null" >
        STAFF_ID = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.subOrderId != null" >
        SUB_ORDER_ID = #{record.subOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.scoreUsing != null" >
        SCORE_USING = #{record.scoreUsing,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createStaff != null" >
        CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.backFlag != null" >
        BACK_FLAG = #{record.backFlag,jdbcType=CHAR},
      </if>
      <if test="record.siteId != null" >
        SITE_ID = #{record.siteId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_score_exchange
    set ID = #{record.id,jdbcType=INTEGER},
      EXCHANGE_MODE = #{record.exchangeMode,jdbcType=VARCHAR},
      STAFF_ID = #{record.staffId,jdbcType=INTEGER},
      ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      SUB_ORDER_ID = #{record.subOrderId,jdbcType=VARCHAR},
      SCORE_USING = #{record.scoreUsing,jdbcType=INTEGER},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      BACK_FLAG = #{record.backFlag,jdbcType=CHAR},
      SITE_ID = #{record.siteId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.staff.dao.model.ScoreExchange" >
    update t_score_exchange
    <set >
      <if test="exchangeMode != null" >
        EXCHANGE_MODE = #{exchangeMode,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        STAFF_ID = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="subOrderId != null" >
        SUB_ORDER_ID = #{subOrderId,jdbcType=VARCHAR},
      </if>
      <if test="scoreUsing != null" >
        SCORE_USING = #{scoreUsing,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backFlag != null" >
        BACK_FLAG = #{backFlag,jdbcType=CHAR},
      </if>
      <if test="siteId != null" >
        SITE_ID = #{siteId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.staff.dao.model.ScoreExchange" >
    update t_score_exchange
    set EXCHANGE_MODE = #{exchangeMode,jdbcType=VARCHAR},
      STAFF_ID = #{staffId,jdbcType=INTEGER},
      ORDER_ID = #{orderId,jdbcType=VARCHAR},
      SUB_ORDER_ID = #{subOrderId,jdbcType=VARCHAR},
      SCORE_USING = #{scoreUsing,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      BACK_FLAG = #{backFlag,jdbcType=CHAR},
      SITE_ID = #{siteId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>