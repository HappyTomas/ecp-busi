<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.unpf.dao.mapper.busi.UnpfSendLogMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.unpf.dao.model.UnpfSendLog" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="SHOP_AUTH_ID" property="shopAuthId" jdbcType="INTEGER" />
    <result column="SEND_ID" property="sendId" jdbcType="INTEGER" />
    <result column="PLAT_TYPE" property="platType" jdbcType="VARCHAR" />
    <result column="SHOP_ID" property="shopId" jdbcType="INTEGER" />
    <result column="GDS_ID" property="gdsId" jdbcType="INTEGER" />
    <result column="SKU_ID" property="skuId" jdbcType="INTEGER" />
    <result column="ACTION" property="action" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_STAFF" property="createStaff" jdbcType="INTEGER" />
    <result column="OUT_GDS_ID" property="outGdsId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zengshi.ecp.unpf.dao.model.UnpfSendLog" extends="BaseResultMap" >
    <result column="ERRORS" property="errors" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, SHOP_AUTH_ID, SEND_ID, PLAT_TYPE, SHOP_ID, GDS_ID, SKU_ID, ACTION, CREATE_TIME, 
    CREATE_STAFF, OUT_GDS_ID
  </sql>
  <sql id="Blob_Column_List" >
    ERRORS
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfSendLogCriteria" >
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
      select * from (select t_1.*,rownum as row_num from (
    </if>
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_unpf_send_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       <![CDATA[ ) t_1 where rownum<=#{limitClauseCount,jdbcType=INTEGER} + #{limitClauseStart,jdbcType=INTEGER}) t_2 where t_2.row_num>#{limitClauseStart,jdbcType=INTEGER}]]>
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfSendLogCriteria" >
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       select * from (select t_1.*,rownum as row_num from (
    </if>
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_unpf_send_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       <![CDATA[ ) t_1 where rownum<=#{limitClauseCount,jdbcType=INTEGER} + #{limitClauseStart,jdbcType=INTEGER}) t_2 where t_2.row_num>#{limitClauseStart,jdbcType=INTEGER}]]>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_unpf_send_log
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_unpf_send_log
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfSendLog" >
    insert into t_unpf_send_log (ID, SHOP_AUTH_ID, SEND_ID, 
      PLAT_TYPE, SHOP_ID, GDS_ID, 
      SKU_ID, ACTION, CREATE_TIME, 
      CREATE_STAFF, OUT_GDS_ID, ERRORS
      )
    values (#{id,jdbcType=INTEGER}, #{shopAuthId,jdbcType=INTEGER}, #{sendId,jdbcType=INTEGER}, 
      #{platType,jdbcType=VARCHAR}, #{shopId,jdbcType=INTEGER}, #{gdsId,jdbcType=INTEGER}, 
      #{skuId,jdbcType=INTEGER}, #{action,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createStaff,jdbcType=INTEGER}, #{outGdsId,jdbcType=VARCHAR}, #{errors,jdbcType=CLOB}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfSendLog" >
    insert into t_unpf_send_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="shopAuthId != null" >
        SHOP_AUTH_ID,
      </if>
      <if test="sendId != null" >
        SEND_ID,
      </if>
      <if test="platType != null" >
        PLAT_TYPE,
      </if>
      <if test="shopId != null" >
        SHOP_ID,
      </if>
      <if test="gdsId != null" >
        GDS_ID,
      </if>
      <if test="skuId != null" >
        SKU_ID,
      </if>
      <if test="action != null" >
        ACTION,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF,
      </if>
      <if test="outGdsId != null" >
        OUT_GDS_ID,
      </if>
      <if test="errors != null" >
        ERRORS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shopAuthId != null" >
        #{shopAuthId,jdbcType=INTEGER},
      </if>
      <if test="sendId != null" >
        #{sendId,jdbcType=INTEGER},
      </if>
      <if test="platType != null" >
        #{platType,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="gdsId != null" >
        #{gdsId,jdbcType=INTEGER},
      </if>
      <if test="skuId != null" >
        #{skuId,jdbcType=INTEGER},
      </if>
      <if test="action != null" >
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="outGdsId != null" >
        #{outGdsId,jdbcType=VARCHAR},
      </if>
      <if test="errors != null" >
        #{errors,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfSendLogCriteria" resultType="java.lang.Long" >
    select count(*) from t_unpf_send_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_unpf_send_log
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shopAuthId != null" >
        SHOP_AUTH_ID = #{record.shopAuthId,jdbcType=INTEGER},
      </if>
      <if test="record.sendId != null" >
        SEND_ID = #{record.sendId,jdbcType=INTEGER},
      </if>
      <if test="record.platType != null" >
        PLAT_TYPE = #{record.platType,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null" >
        SHOP_ID = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.gdsId != null" >
        GDS_ID = #{record.gdsId,jdbcType=INTEGER},
      </if>
      <if test="record.skuId != null" >
        SKU_ID = #{record.skuId,jdbcType=INTEGER},
      </if>
      <if test="record.action != null" >
        ACTION = #{record.action,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createStaff != null" >
        CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      </if>
      <if test="record.outGdsId != null" >
        OUT_GDS_ID = #{record.outGdsId,jdbcType=VARCHAR},
      </if>
      <if test="record.errors != null" >
        ERRORS = #{record.errors,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_unpf_send_log
    set ID = #{record.id,jdbcType=INTEGER},
      SHOP_AUTH_ID = #{record.shopAuthId,jdbcType=INTEGER},
      SEND_ID = #{record.sendId,jdbcType=INTEGER},
      PLAT_TYPE = #{record.platType,jdbcType=VARCHAR},
      SHOP_ID = #{record.shopId,jdbcType=INTEGER},
      GDS_ID = #{record.gdsId,jdbcType=INTEGER},
      SKU_ID = #{record.skuId,jdbcType=INTEGER},
      ACTION = #{record.action,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      OUT_GDS_ID = #{record.outGdsId,jdbcType=VARCHAR},
      ERRORS = #{record.errors,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_unpf_send_log
    set ID = #{record.id,jdbcType=INTEGER},
      SHOP_AUTH_ID = #{record.shopAuthId,jdbcType=INTEGER},
      SEND_ID = #{record.sendId,jdbcType=INTEGER},
      PLAT_TYPE = #{record.platType,jdbcType=VARCHAR},
      SHOP_ID = #{record.shopId,jdbcType=INTEGER},
      GDS_ID = #{record.gdsId,jdbcType=INTEGER},
      SKU_ID = #{record.skuId,jdbcType=INTEGER},
      ACTION = #{record.action,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      OUT_GDS_ID = #{record.outGdsId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfSendLog" >
    update t_unpf_send_log
    <set >
      <if test="shopAuthId != null" >
        SHOP_AUTH_ID = #{shopAuthId,jdbcType=INTEGER},
      </if>
      <if test="sendId != null" >
        SEND_ID = #{sendId,jdbcType=INTEGER},
      </if>
      <if test="platType != null" >
        PLAT_TYPE = #{platType,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        SHOP_ID = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="gdsId != null" >
        GDS_ID = #{gdsId,jdbcType=INTEGER},
      </if>
      <if test="skuId != null" >
        SKU_ID = #{skuId,jdbcType=INTEGER},
      </if>
      <if test="action != null" >
        ACTION = #{action,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="outGdsId != null" >
        OUT_GDS_ID = #{outGdsId,jdbcType=VARCHAR},
      </if>
      <if test="errors != null" >
        ERRORS = #{errors,jdbcType=CLOB},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfSendLog" >
    update t_unpf_send_log
    set SHOP_AUTH_ID = #{shopAuthId,jdbcType=INTEGER},
      SEND_ID = #{sendId,jdbcType=INTEGER},
      PLAT_TYPE = #{platType,jdbcType=VARCHAR},
      SHOP_ID = #{shopId,jdbcType=INTEGER},
      GDS_ID = #{gdsId,jdbcType=INTEGER},
      SKU_ID = #{skuId,jdbcType=INTEGER},
      ACTION = #{action,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      OUT_GDS_ID = #{outGdsId,jdbcType=VARCHAR},
      ERRORS = #{errors,jdbcType=CLOB}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfSendLog" >
    update t_unpf_send_log
    set SHOP_AUTH_ID = #{shopAuthId,jdbcType=INTEGER},
      SEND_ID = #{sendId,jdbcType=INTEGER},
      PLAT_TYPE = #{platType,jdbcType=VARCHAR},
      SHOP_ID = #{shopId,jdbcType=INTEGER},
      GDS_ID = #{gdsId,jdbcType=INTEGER},
      SKU_ID = #{skuId,jdbcType=INTEGER},
      ACTION = #{action,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      OUT_GDS_ID = #{outGdsId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>