<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.unpf.dao.mapper.common.UnpfPropValueRelaMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.unpf.dao.model.UnpfPropValueRela" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="shop_auth_id" property="shopAuthId" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="plat_type" property="platType" jdbcType="VARCHAR" />
    <result column="out_prop_id" property="outPropId" jdbcType="VARCHAR" />
    <result column="out_vid" property="outVid" jdbcType="VARCHAR" />
    <result column="out_vid_name" property="outVidName" jdbcType="VARCHAR" />
    <result column="prop_id" property="propId" jdbcType="VARCHAR" />
    <result column="vid" property="vid" jdbcType="VARCHAR" />
    <result column="vid_name" property="vidName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="create_staff" property="createStaff" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="DATE" />
    <result column="update_staff" property="updateStaff" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, shop_auth_id, shop_id, plat_type, out_prop_id, out_vid, out_vid_name, prop_id, 
    vid, vid_name, status, create_time, create_staff, update_time, update_staff
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfPropValueRelaCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_unpf_prop_value_rela
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       limit #{limitClauseStart,jdbcType=INTEGER}, #{limitClauseCount,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_unpf_prop_value_rela
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_unpf_prop_value_rela
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfPropValueRelaCriteria" >
    delete from t_unpf_prop_value_rela
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfPropValueRela" >
    insert into t_unpf_prop_value_rela (id, shop_auth_id, shop_id, 
      plat_type, out_prop_id, out_vid, 
      out_vid_name, prop_id, vid, 
      vid_name, status, create_time, 
      create_staff, update_time, update_staff
      )
    values (#{id,jdbcType=INTEGER}, #{shopAuthId,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}, 
      #{platType,jdbcType=VARCHAR}, #{outPropId,jdbcType=VARCHAR}, #{outVid,jdbcType=VARCHAR}, 
      #{outVidName,jdbcType=VARCHAR}, #{propId,jdbcType=VARCHAR}, #{vid,jdbcType=VARCHAR}, 
      #{vidName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, 
      #{createStaff,jdbcType=INTEGER}, #{updateTime,jdbcType=DATE}, #{updateStaff,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfPropValueRela" >
    insert into t_unpf_prop_value_rela
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="shopAuthId != null" >
        shop_auth_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="platType != null" >
        plat_type,
      </if>
      <if test="outPropId != null" >
        out_prop_id,
      </if>
      <if test="outVid != null" >
        out_vid,
      </if>
      <if test="outVidName != null" >
        out_vid_name,
      </if>
      <if test="propId != null" >
        prop_id,
      </if>
      <if test="vid != null" >
        vid,
      </if>
      <if test="vidName != null" >
        vid_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createStaff != null" >
        create_staff,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateStaff != null" >
        update_staff,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shopAuthId != null" >
        #{shopAuthId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="platType != null" >
        #{platType,jdbcType=VARCHAR},
      </if>
      <if test="outPropId != null" >
        #{outPropId,jdbcType=VARCHAR},
      </if>
      <if test="outVid != null" >
        #{outVid,jdbcType=VARCHAR},
      </if>
      <if test="outVidName != null" >
        #{outVidName,jdbcType=VARCHAR},
      </if>
      <if test="propId != null" >
        #{propId,jdbcType=VARCHAR},
      </if>
      <if test="vid != null" >
        #{vid,jdbcType=VARCHAR},
      </if>
      <if test="vidName != null" >
        #{vidName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateStaff != null" >
        #{updateStaff,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfPropValueRelaCriteria" resultType="java.lang.Long" >
    select count(*) from t_unpf_prop_value_rela
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_unpf_prop_value_rela
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shopAuthId != null" >
        shop_auth_id = #{record.shopAuthId,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.platType != null" >
        plat_type = #{record.platType,jdbcType=VARCHAR},
      </if>
      <if test="record.outPropId != null" >
        out_prop_id = #{record.outPropId,jdbcType=VARCHAR},
      </if>
      <if test="record.outVid != null" >
        out_vid = #{record.outVid,jdbcType=VARCHAR},
      </if>
      <if test="record.outVidName != null" >
        out_vid_name = #{record.outVidName,jdbcType=VARCHAR},
      </if>
      <if test="record.propId != null" >
        prop_id = #{record.propId,jdbcType=VARCHAR},
      </if>
      <if test="record.vid != null" >
        vid = #{record.vid,jdbcType=VARCHAR},
      </if>
      <if test="record.vidName != null" >
        vid_name = #{record.vidName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.createStaff != null" >
        create_staff = #{record.createStaff,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.updateStaff != null" >
        update_staff = #{record.updateStaff,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_unpf_prop_value_rela
    set id = #{record.id,jdbcType=INTEGER},
      shop_auth_id = #{record.shopAuthId,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      plat_type = #{record.platType,jdbcType=VARCHAR},
      out_prop_id = #{record.outPropId,jdbcType=VARCHAR},
      out_vid = #{record.outVid,jdbcType=VARCHAR},
      out_vid_name = #{record.outVidName,jdbcType=VARCHAR},
      prop_id = #{record.propId,jdbcType=VARCHAR},
      vid = #{record.vid,jdbcType=VARCHAR},
      vid_name = #{record.vidName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=DATE},
      create_staff = #{record.createStaff,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=DATE},
      update_staff = #{record.updateStaff,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfPropValueRela" >
    update t_unpf_prop_value_rela
    <set >
      <if test="shopAuthId != null" >
        shop_auth_id = #{shopAuthId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="platType != null" >
        plat_type = #{platType,jdbcType=VARCHAR},
      </if>
      <if test="outPropId != null" >
        out_prop_id = #{outPropId,jdbcType=VARCHAR},
      </if>
      <if test="outVid != null" >
        out_vid = #{outVid,jdbcType=VARCHAR},
      </if>
      <if test="outVidName != null" >
        out_vid_name = #{outVidName,jdbcType=VARCHAR},
      </if>
      <if test="propId != null" >
        prop_id = #{propId,jdbcType=VARCHAR},
      </if>
      <if test="vid != null" >
        vid = #{vid,jdbcType=VARCHAR},
      </if>
      <if test="vidName != null" >
        vid_name = #{vidName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="createStaff != null" >
        create_staff = #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateStaff != null" >
        update_staff = #{updateStaff,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.unpf.dao.model.UnpfPropValueRela" >
    update t_unpf_prop_value_rela
    set shop_auth_id = #{shopAuthId,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=INTEGER},
      plat_type = #{platType,jdbcType=VARCHAR},
      out_prop_id = #{outPropId,jdbcType=VARCHAR},
      out_vid = #{outVid,jdbcType=VARCHAR},
      out_vid_name = #{outVidName,jdbcType=VARCHAR},
      prop_id = #{propId,jdbcType=VARCHAR},
      vid = #{vid,jdbcType=VARCHAR},
      vid_name = #{vidName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      create_staff = #{createStaff,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=DATE},
      update_staff = #{updateStaff,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>