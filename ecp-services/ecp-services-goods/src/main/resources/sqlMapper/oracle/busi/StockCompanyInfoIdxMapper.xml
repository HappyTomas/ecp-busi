<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.goods.dao.mapper.busi.StockCompanyInfoIdxMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.goods.dao.model.StockCompanyInfoIdx" >
    <result column="COMPANY_ID" property="companyId" jdbcType="INTEGER" />
    <result column="CATG_CODE" property="catgCode" jdbcType="VARCHAR" />
    <result column="TYPE_ID" property="typeId" jdbcType="INTEGER" />
    <result column="GDS_ID" property="gdsId" jdbcType="INTEGER" />
    <result column="SKU_ID" property="skuId" jdbcType="INTEGER" />
    <result column="REP_TYPE" property="repType" jdbcType="VARCHAR" />
    <result column="STOCK_TYPE" property="stockType" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="STOCK_ID" property="stockId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    COMPANY_ID, CATG_CODE, TYPE_ID, GDS_ID, SKU_ID, REP_TYPE, STOCK_TYPE, STATUS, STOCK_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.goods.dao.model.StockCompanyInfoIdxCriteria" >
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       select * from (select t_1.*,rownum as row_num from (
    </if>
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_stock_company_info_idx
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       <![CDATA[ ) t_1 where rownum<=#{limitClauseCount,jdbcType=INTEGER} + #{limitClauseStart,jdbcType=INTEGER}) t_2 where t_2.row_num>#{limitClauseStart,jdbcType=INTEGER}]]>
    </if>
  </select>
  <insert id="insert" parameterType="com.zengshi.ecp.goods.dao.model.StockCompanyInfoIdx" >
    insert into t_stock_company_info_idx (COMPANY_ID, CATG_CODE, TYPE_ID, 
      GDS_ID, SKU_ID, REP_TYPE, 
      STOCK_TYPE, STATUS, STOCK_ID
      )
    values (#{companyId,jdbcType=INTEGER}, #{catgCode,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, 
      #{gdsId,jdbcType=INTEGER}, #{skuId,jdbcType=INTEGER}, #{repType,jdbcType=VARCHAR}, 
      #{stockType,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{stockId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.goods.dao.model.StockCompanyInfoIdx" >
    insert into t_stock_company_info_idx
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        COMPANY_ID,
      </if>
      <if test="catgCode != null" >
        CATG_CODE,
      </if>
      <if test="typeId != null" >
        TYPE_ID,
      </if>
      <if test="gdsId != null" >
        GDS_ID,
      </if>
      <if test="skuId != null" >
        SKU_ID,
      </if>
      <if test="repType != null" >
        REP_TYPE,
      </if>
      <if test="stockType != null" >
        STOCK_TYPE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="stockId != null" >
        STOCK_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="catgCode != null" >
        #{catgCode,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="gdsId != null" >
        #{gdsId,jdbcType=INTEGER},
      </if>
      <if test="skuId != null" >
        #{skuId,jdbcType=INTEGER},
      </if>
      <if test="repType != null" >
        #{repType,jdbcType=VARCHAR},
      </if>
      <if test="stockType != null" >
        #{stockType,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null" >
        #{stockId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.goods.dao.model.StockCompanyInfoIdxCriteria" resultType="java.lang.Long" >
    select count(*) from t_stock_company_info_idx
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_stock_company_info_idx
    <set >
      <if test="record.companyId != null" >
        COMPANY_ID = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.catgCode != null" >
        CATG_CODE = #{record.catgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null" >
        TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.gdsId != null" >
        GDS_ID = #{record.gdsId,jdbcType=INTEGER},
      </if>
      <if test="record.skuId != null" >
        SKU_ID = #{record.skuId,jdbcType=INTEGER},
      </if>
      <if test="record.repType != null" >
        REP_TYPE = #{record.repType,jdbcType=VARCHAR},
      </if>
      <if test="record.stockType != null" >
        STOCK_TYPE = #{record.stockType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.stockId != null" >
        STOCK_ID = #{record.stockId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_stock_company_info_idx
    set COMPANY_ID = #{record.companyId,jdbcType=INTEGER},
      CATG_CODE = #{record.catgCode,jdbcType=VARCHAR},
      TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      GDS_ID = #{record.gdsId,jdbcType=INTEGER},
      SKU_ID = #{record.skuId,jdbcType=INTEGER},
      REP_TYPE = #{record.repType,jdbcType=VARCHAR},
      STOCK_TYPE = #{record.stockType,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      STOCK_ID = #{record.stockId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
