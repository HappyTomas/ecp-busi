<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.goods.dao.mapper.busi.GdsGiftMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.goods.dao.model.GdsGift" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="GDS_ID" property="gdsId" jdbcType="INTEGER" />
    <result column="SKU_ID" property="skuId" jdbcType="INTEGER" />
    <result column="SHOP_ID" property="shopId" jdbcType="INTEGER" />
    <result column="GIFT_PIC" property="giftPic" jdbcType="VARCHAR" />
    <result column="GIFT_NAME" property="giftName" jdbcType="VARCHAR" />
    <result column="GIFT_DESC" property="giftDesc" jdbcType="VARCHAR" />
    <result column="GIFT_VALUE" property="giftValue" jdbcType="INTEGER" />
    <result column="GIFT_STATUS" property="giftStatus" jdbcType="VARCHAR" />
    <result column="GIFT_AMOUNT" property="giftAmount" jdbcType="INTEGER" />
    <result column="GIFT_SEND" property="giftSend" jdbcType="INTEGER" />
    <result column="GIFT_VALID" property="giftValid" jdbcType="INTEGER" />
    <result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
    <result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_STAFF" property="createStaff" jdbcType="INTEGER" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_STAFF" property="updateStaff" jdbcType="INTEGER" />
    <result column="GIFT_TYPE" property="giftType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, GDS_ID, SKU_ID, SHOP_ID, GIFT_PIC, GIFT_NAME, GIFT_DESC, GIFT_VALUE, GIFT_STATUS, 
    GIFT_AMOUNT, GIFT_SEND, GIFT_VALID, START_TIME, END_TIME, CREATE_TIME, CREATE_STAFF, 
    UPDATE_TIME, UPDATE_STAFF, GIFT_TYPE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.goods.dao.model.GdsGiftCriteria" >
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       select * from (select t_1.*,rownum as row_num from (
    </if>
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_gds_gift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       <![CDATA[ ) t_1 where rownum<=#{limitClauseCount,jdbcType=INTEGER} + #{limitClauseStart,jdbcType=INTEGER}) t_2 where t_2.row_num>#{limitClauseStart,jdbcType=INTEGER}]]>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_gds_gift
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_gds_gift
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zengshi.ecp.goods.dao.model.GdsGiftCriteria" >
    delete from t_gds_gift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.goods.dao.model.GdsGift" >
    insert into t_gds_gift (ID, GDS_ID, SKU_ID, 
      SHOP_ID, GIFT_PIC, GIFT_NAME, 
      GIFT_DESC, GIFT_VALUE, GIFT_STATUS, 
      GIFT_AMOUNT, GIFT_SEND, GIFT_VALID, 
      START_TIME, END_TIME, CREATE_TIME, 
      CREATE_STAFF, UPDATE_TIME, UPDATE_STAFF, 
      GIFT_TYPE)
    values (#{id,jdbcType=INTEGER}, #{gdsId,jdbcType=INTEGER}, #{skuId,jdbcType=INTEGER}, 
      #{shopId,jdbcType=INTEGER}, #{giftPic,jdbcType=VARCHAR}, #{giftName,jdbcType=VARCHAR}, 
      #{giftDesc,jdbcType=VARCHAR}, #{giftValue,jdbcType=INTEGER}, #{giftStatus,jdbcType=VARCHAR}, 
      #{giftAmount,jdbcType=INTEGER}, #{giftSend,jdbcType=INTEGER}, #{giftValid,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createStaff,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateStaff,jdbcType=INTEGER}, 
      #{giftType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.goods.dao.model.GdsGift" >
    insert into t_gds_gift
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="gdsId != null" >
        GDS_ID,
      </if>
      <if test="skuId != null" >
        SKU_ID,
      </if>
      <if test="shopId != null" >
        SHOP_ID,
      </if>
      <if test="giftPic != null" >
        GIFT_PIC,
      </if>
      <if test="giftName != null" >
        GIFT_NAME,
      </if>
      <if test="giftDesc != null" >
        GIFT_DESC,
      </if>
      <if test="giftValue != null" >
        GIFT_VALUE,
      </if>
      <if test="giftStatus != null" >
        GIFT_STATUS,
      </if>
      <if test="giftAmount != null" >
        GIFT_AMOUNT,
      </if>
      <if test="giftSend != null" >
        GIFT_SEND,
      </if>
      <if test="giftValid != null" >
        GIFT_VALID,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF,
      </if>
      <if test="giftType != null" >
        GIFT_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gdsId != null" >
        #{gdsId,jdbcType=INTEGER},
      </if>
      <if test="skuId != null" >
        #{skuId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="giftPic != null" >
        #{giftPic,jdbcType=VARCHAR},
      </if>
      <if test="giftName != null" >
        #{giftName,jdbcType=VARCHAR},
      </if>
      <if test="giftDesc != null" >
        #{giftDesc,jdbcType=VARCHAR},
      </if>
      <if test="giftValue != null" >
        #{giftValue,jdbcType=INTEGER},
      </if>
      <if test="giftStatus != null" >
        #{giftStatus,jdbcType=VARCHAR},
      </if>
      <if test="giftAmount != null" >
        #{giftAmount,jdbcType=INTEGER},
      </if>
      <if test="giftSend != null" >
        #{giftSend,jdbcType=INTEGER},
      </if>
      <if test="giftValid != null" >
        #{giftValid,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="giftType != null" >
        #{giftType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.goods.dao.model.GdsGiftCriteria" resultType="java.lang.Long" >
    select count(*) from t_gds_gift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_gds_gift
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gdsId != null" >
        GDS_ID = #{record.gdsId,jdbcType=INTEGER},
      </if>
      <if test="record.skuId != null" >
        SKU_ID = #{record.skuId,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        SHOP_ID = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.giftPic != null" >
        GIFT_PIC = #{record.giftPic,jdbcType=VARCHAR},
      </if>
      <if test="record.giftName != null" >
        GIFT_NAME = #{record.giftName,jdbcType=VARCHAR},
      </if>
      <if test="record.giftDesc != null" >
        GIFT_DESC = #{record.giftDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.giftValue != null" >
        GIFT_VALUE = #{record.giftValue,jdbcType=INTEGER},
      </if>
      <if test="record.giftStatus != null" >
        GIFT_STATUS = #{record.giftStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.giftAmount != null" >
        GIFT_AMOUNT = #{record.giftAmount,jdbcType=INTEGER},
      </if>
      <if test="record.giftSend != null" >
        GIFT_SEND = #{record.giftSend,jdbcType=INTEGER},
      </if>
      <if test="record.giftValid != null" >
        GIFT_VALID = #{record.giftValid,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createStaff != null" >
        CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateStaff != null" >
        UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER},
      </if>
      <if test="record.giftType != null" >
        GIFT_TYPE = #{record.giftType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_gds_gift
    set ID = #{record.id,jdbcType=INTEGER},
      GDS_ID = #{record.gdsId,jdbcType=INTEGER},
      SKU_ID = #{record.skuId,jdbcType=INTEGER},
      SHOP_ID = #{record.shopId,jdbcType=INTEGER},
      GIFT_PIC = #{record.giftPic,jdbcType=VARCHAR},
      GIFT_NAME = #{record.giftName,jdbcType=VARCHAR},
      GIFT_DESC = #{record.giftDesc,jdbcType=VARCHAR},
      GIFT_VALUE = #{record.giftValue,jdbcType=INTEGER},
      GIFT_STATUS = #{record.giftStatus,jdbcType=VARCHAR},
      GIFT_AMOUNT = #{record.giftAmount,jdbcType=INTEGER},
      GIFT_SEND = #{record.giftSend,jdbcType=INTEGER},
      GIFT_VALID = #{record.giftValid,jdbcType=INTEGER},
      START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER},
      GIFT_TYPE = #{record.giftType,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.goods.dao.model.GdsGift" >
    update t_gds_gift
    <set >
      <if test="gdsId != null" >
        GDS_ID = #{gdsId,jdbcType=INTEGER},
      </if>
      <if test="skuId != null" >
        SKU_ID = #{skuId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        SHOP_ID = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="giftPic != null" >
        GIFT_PIC = #{giftPic,jdbcType=VARCHAR},
      </if>
      <if test="giftName != null" >
        GIFT_NAME = #{giftName,jdbcType=VARCHAR},
      </if>
      <if test="giftDesc != null" >
        GIFT_DESC = #{giftDesc,jdbcType=VARCHAR},
      </if>
      <if test="giftValue != null" >
        GIFT_VALUE = #{giftValue,jdbcType=INTEGER},
      </if>
      <if test="giftStatus != null" >
        GIFT_STATUS = #{giftStatus,jdbcType=VARCHAR},
      </if>
      <if test="giftAmount != null" >
        GIFT_AMOUNT = #{giftAmount,jdbcType=INTEGER},
      </if>
      <if test="giftSend != null" >
        GIFT_SEND = #{giftSend,jdbcType=INTEGER},
      </if>
      <if test="giftValid != null" >
        GIFT_VALID = #{giftValid,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="giftType != null" >
        GIFT_TYPE = #{giftType,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.goods.dao.model.GdsGift" >
    update t_gds_gift
    set GDS_ID = #{gdsId,jdbcType=INTEGER},
      SKU_ID = #{skuId,jdbcType=INTEGER},
      SHOP_ID = #{shopId,jdbcType=INTEGER},
      GIFT_PIC = #{giftPic,jdbcType=VARCHAR},
      GIFT_NAME = #{giftName,jdbcType=VARCHAR},
      GIFT_DESC = #{giftDesc,jdbcType=VARCHAR},
      GIFT_VALUE = #{giftValue,jdbcType=INTEGER},
      GIFT_STATUS = #{giftStatus,jdbcType=VARCHAR},
      GIFT_AMOUNT = #{giftAmount,jdbcType=INTEGER},
      GIFT_SEND = #{giftSend,jdbcType=INTEGER},
      GIFT_VALID = #{giftValid,jdbcType=INTEGER},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER},
      GIFT_TYPE = #{giftType,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>
