<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.goods.dao.mapper.busi.StockSkuEntityMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.goods.dao.model.StockSkuEntity" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="STOCK_ID" property="stockId" jdbcType="INTEGER" />
    <result column="SKU_ID" property="skuId" jdbcType="INTEGER" />
    <result column="REP_CODE" property="repCode" jdbcType="INTEGER" />
    <result column="CODE_TYPE" property="codeType" jdbcType="VARCHAR" />
    <result column="SERIAL_NO" property="serialNo" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_STAFF" property="createStaff" jdbcType="INTEGER" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_STAFF" property="updateStaff" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, STOCK_ID, SKU_ID, REP_CODE, CODE_TYPE, SERIAL_NO, STATUS, MODIFY_TIME, CREATE_TIME, 
    CREATE_STAFF, UPDATE_TIME, UPDATE_STAFF
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.goods.dao.model.StockSkuEntityCriteria" >
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       select * from (select t_1.*,rownum as row_num from (
    </if>
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_stock_sku_entity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       <![CDATA[ ) t_1 where rownum<=#{limitClauseCount,jdbcType=INTEGER} + #{limitClauseStart,jdbcType=INTEGER}) t_2 where t_2.row_num>#{limitClauseStart,jdbcType=INTEGER}]]>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_stock_sku_entity
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_stock_sku_entity
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.goods.dao.model.StockSkuEntity" >
    insert into t_stock_sku_entity (ID, STOCK_ID, SKU_ID, 
      REP_CODE, CODE_TYPE, SERIAL_NO, 
      STATUS, MODIFY_TIME, CREATE_TIME, 
      CREATE_STAFF, UPDATE_TIME, UPDATE_STAFF
      )
    values (#{id,jdbcType=INTEGER}, #{stockId,jdbcType=INTEGER}, #{skuId,jdbcType=INTEGER}, 
      #{repCode,jdbcType=INTEGER}, #{codeType,jdbcType=VARCHAR}, #{serialNo,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createStaff,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateStaff,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.goods.dao.model.StockSkuEntity" >
    insert into t_stock_sku_entity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="stockId != null" >
        STOCK_ID,
      </if>
      <if test="skuId != null" >
        SKU_ID,
      </if>
      <if test="repCode != null" >
        REP_CODE,
      </if>
      <if test="codeType != null" >
        CODE_TYPE,
      </if>
      <if test="serialNo != null" >
        SERIAL_NO,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stockId != null" >
        #{stockId,jdbcType=INTEGER},
      </if>
      <if test="skuId != null" >
        #{skuId,jdbcType=INTEGER},
      </if>
      <if test="repCode != null" >
        #{repCode,jdbcType=INTEGER},
      </if>
      <if test="codeType != null" >
        #{codeType,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null" >
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        #{updateStaff,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.goods.dao.model.StockSkuEntityCriteria" resultType="java.lang.Long" >
    select count(*) from t_stock_sku_entity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_stock_sku_entity
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stockId != null" >
        STOCK_ID = #{record.stockId,jdbcType=INTEGER},
      </if>
      <if test="record.skuId != null" >
        SKU_ID = #{record.skuId,jdbcType=INTEGER},
      </if>
      <if test="record.repCode != null" >
        REP_CODE = #{record.repCode,jdbcType=INTEGER},
      </if>
      <if test="record.codeType != null" >
        CODE_TYPE = #{record.codeType,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNo != null" >
        SERIAL_NO = #{record.serialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createStaff != null" >
        CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateStaff != null" >
        UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_stock_sku_entity
    set ID = #{record.id,jdbcType=INTEGER},
      STOCK_ID = #{record.stockId,jdbcType=INTEGER},
      SKU_ID = #{record.skuId,jdbcType=INTEGER},
      REP_CODE = #{record.repCode,jdbcType=INTEGER},
      CODE_TYPE = #{record.codeType,jdbcType=VARCHAR},
      SERIAL_NO = #{record.serialNo,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.goods.dao.model.StockSkuEntity" >
    update t_stock_sku_entity
    <set >
      <if test="stockId != null" >
        STOCK_ID = #{stockId,jdbcType=INTEGER},
      </if>
      <if test="skuId != null" >
        SKU_ID = #{skuId,jdbcType=INTEGER},
      </if>
      <if test="repCode != null" >
        REP_CODE = #{repCode,jdbcType=INTEGER},
      </if>
      <if test="codeType != null" >
        CODE_TYPE = #{codeType,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null" >
        SERIAL_NO = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.goods.dao.model.StockSkuEntity" >
    update t_stock_sku_entity
    set STOCK_ID = #{stockId,jdbcType=INTEGER},
      SKU_ID = #{skuId,jdbcType=INTEGER},
      REP_CODE = #{repCode,jdbcType=INTEGER},
      CODE_TYPE = #{codeType,jdbcType=VARCHAR},
      SERIAL_NO = #{serialNo,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>
