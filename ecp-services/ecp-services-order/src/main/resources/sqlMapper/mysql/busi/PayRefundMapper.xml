<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.order.dao.mapper.busi.PayRefundMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.order.dao.model.PayRefund" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="PAY_WAY" property="payWay" jdbcType="VARCHAR" />
    <result column="ORDER_ID" property="orderId" jdbcType="VARCHAR" />
    <result column="STAFF_ID" property="staffId" jdbcType="INTEGER" />
    <result column="SHOP_ID" property="shopId" jdbcType="INTEGER" />
    <result column="REFUND_AMOUNT" property="refundAmount" jdbcType="INTEGER" />
    <result column="REQUEST_TIME" property="requestTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_STAFF" property="createStaff" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PAY_WAY, ORDER_ID, STAFF_ID, SHOP_ID, REFUND_AMOUNT, REQUEST_TIME, CREATE_TIME, 
    CREATE_STAFF
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.order.dao.model.PayRefundCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pay_refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       limit #{limitClauseStart,jdbcType=INTEGER}, #{limitClauseCount,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_pay_refund
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_pay_refund
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zengshi.ecp.order.dao.model.PayRefundCriteria" >
    delete from t_pay_refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.order.dao.model.PayRefund" >
    insert into t_pay_refund (ID, PAY_WAY, ORDER_ID, 
      STAFF_ID, SHOP_ID, REFUND_AMOUNT, 
      REQUEST_TIME, CREATE_TIME, CREATE_STAFF
      )
    values (#{id,jdbcType=INTEGER}, #{payWay,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{staffId,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}, #{refundAmount,jdbcType=INTEGER}, 
      #{requestTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{createStaff,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.order.dao.model.PayRefund" >
    insert into t_pay_refund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="payWay != null" >
        PAY_WAY,
      </if>
      <if test="orderId != null" >
        ORDER_ID,
      </if>
      <if test="staffId != null" >
        STAFF_ID,
      </if>
      <if test="shopId != null" >
        SHOP_ID,
      </if>
      <if test="refundAmount != null" >
        REFUND_AMOUNT,
      </if>
      <if test="requestTime != null" >
        REQUEST_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="refundAmount != null" >
        #{refundAmount,jdbcType=INTEGER},
      </if>
      <if test="requestTime != null" >
        #{requestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.order.dao.model.PayRefundCriteria" resultType="java.lang.Long" >
    select count(*) from t_pay_refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_pay_refund
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.payWay != null" >
        PAY_WAY = #{record.payWay,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.staffId != null" >
        STAFF_ID = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        SHOP_ID = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.refundAmount != null" >
        REFUND_AMOUNT = #{record.refundAmount,jdbcType=INTEGER},
      </if>
      <if test="record.requestTime != null" >
        REQUEST_TIME = #{record.requestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createStaff != null" >
        CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_pay_refund
    set ID = #{record.id,jdbcType=INTEGER},
      PAY_WAY = #{record.payWay,jdbcType=VARCHAR},
      ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      STAFF_ID = #{record.staffId,jdbcType=INTEGER},
      SHOP_ID = #{record.shopId,jdbcType=INTEGER},
      REFUND_AMOUNT = #{record.refundAmount,jdbcType=INTEGER},
      REQUEST_TIME = #{record.requestTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.order.dao.model.PayRefund" >
    update t_pay_refund
    <set >
      <if test="payWay != null" >
        PAY_WAY = #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        STAFF_ID = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        SHOP_ID = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="refundAmount != null" >
        REFUND_AMOUNT = #{refundAmount,jdbcType=INTEGER},
      </if>
      <if test="requestTime != null" >
        REQUEST_TIME = #{requestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.order.dao.model.PayRefund" >
    update t_pay_refund
    set PAY_WAY = #{payWay,jdbcType=VARCHAR},
      ORDER_ID = #{orderId,jdbcType=VARCHAR},
      STAFF_ID = #{staffId,jdbcType=INTEGER},
      SHOP_ID = #{shopId,jdbcType=INTEGER},
      REFUND_AMOUNT = #{refundAmount,jdbcType=INTEGER},
      REQUEST_TIME = #{requestTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_STAFF = #{createStaff,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>