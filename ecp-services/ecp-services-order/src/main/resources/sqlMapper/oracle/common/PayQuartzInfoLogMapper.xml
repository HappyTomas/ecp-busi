<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.order.dao.mapper.common.PayQuartzInfoLogMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.order.dao.model.PayQuartzInfoLog" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ORIGINAL_ID" property="originalId" jdbcType="INTEGER" />
    <result column="TASK_TYPE" property="taskType" jdbcType="VARCHAR" />
    <result column="ORDER_ID" property="orderId" jdbcType="VARCHAR" />
    <result column="SUB_ORDER" property="subOrder" jdbcType="VARCHAR" />
    <result column="STAFF_ID" property="staffId" jdbcType="INTEGER" />
    <result column="DEAL_FLAG" property="dealFlag" jdbcType="VARCHAR" />
    <result column="ERROR_TIMES" property="errorTimes" jdbcType="INTEGER" />
    <result column="CREATE_STAFF" property="createStaff" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="NEXT_TIME" property="nextTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_STAFF" property="updateStaff" jdbcType="INTEGER" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="LOG_TIME" property="logTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ORIGINAL_ID, TASK_TYPE, ORDER_ID, SUB_ORDER, STAFF_ID, DEAL_FLAG, ERROR_TIMES, 
    CREATE_STAFF, CREATE_TIME, NEXT_TIME, UPDATE_STAFF, UPDATE_TIME, LOG_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.order.dao.model.PayQuartzInfoLogCriteria" >
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       select * from (select t_1.*,rownum as row_num from (
    </if>
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pay_quartz_info_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       <![CDATA[ ) t_1 where rownum<=#{limitClauseCount,jdbcType=INTEGER} + #{limitClauseStart,jdbcType=INTEGER}) t_2 where t_2.row_num>#{limitClauseStart,jdbcType=INTEGER}]]>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_pay_quartz_info_log
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_pay_quartz_info_log
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zengshi.ecp.order.dao.model.PayQuartzInfoLogCriteria" >
    delete from t_pay_quartz_info_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.order.dao.model.PayQuartzInfoLog" >
    insert into t_pay_quartz_info_log (ID, ORIGINAL_ID, TASK_TYPE, 
      ORDER_ID, SUB_ORDER, STAFF_ID, 
      DEAL_FLAG, ERROR_TIMES, CREATE_STAFF, 
      CREATE_TIME, NEXT_TIME, UPDATE_STAFF, 
      UPDATE_TIME, LOG_TIME)
    values (#{id,jdbcType=INTEGER}, #{originalId,jdbcType=INTEGER}, #{taskType,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=VARCHAR}, #{subOrder,jdbcType=VARCHAR}, #{staffId,jdbcType=INTEGER}, 
      #{dealFlag,jdbcType=VARCHAR}, #{errorTimes,jdbcType=INTEGER}, #{createStaff,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{nextTime,jdbcType=TIMESTAMP}, #{updateStaff,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{logTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.order.dao.model.PayQuartzInfoLog" >
    insert into t_pay_quartz_info_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="originalId != null" >
        ORIGINAL_ID,
      </if>
      <if test="taskType != null" >
        TASK_TYPE,
      </if>
      <if test="orderId != null" >
        ORDER_ID,
      </if>
      <if test="subOrder != null" >
        SUB_ORDER,
      </if>
      <if test="staffId != null" >
        STAFF_ID,
      </if>
      <if test="dealFlag != null" >
        DEAL_FLAG,
      </if>
      <if test="errorTimes != null" >
        ERROR_TIMES,
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="nextTime != null" >
        NEXT_TIME,
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="logTime != null" >
        LOG_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="originalId != null" >
        #{originalId,jdbcType=INTEGER},
      </if>
      <if test="taskType != null" >
        #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="subOrder != null" >
        #{subOrder,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="dealFlag != null" >
        #{dealFlag,jdbcType=VARCHAR},
      </if>
      <if test="errorTimes != null" >
        #{errorTimes,jdbcType=INTEGER},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextTime != null" >
        #{nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logTime != null" >
        #{logTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.order.dao.model.PayQuartzInfoLogCriteria" resultType="java.lang.Long" >
    select count(*) from t_pay_quartz_info_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_pay_quartz_info_log
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.originalId != null" >
        ORIGINAL_ID = #{record.originalId,jdbcType=INTEGER},
      </if>
      <if test="record.taskType != null" >
        TASK_TYPE = #{record.taskType,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.subOrder != null" >
        SUB_ORDER = #{record.subOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.staffId != null" >
        STAFF_ID = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.dealFlag != null" >
        DEAL_FLAG = #{record.dealFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.errorTimes != null" >
        ERROR_TIMES = #{record.errorTimes,jdbcType=INTEGER},
      </if>
      <if test="record.createStaff != null" >
        CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nextTime != null" >
        NEXT_TIME = #{record.nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateStaff != null" >
        UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logTime != null" >
        LOG_TIME = #{record.logTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_pay_quartz_info_log
    set ID = #{record.id,jdbcType=INTEGER},
      ORIGINAL_ID = #{record.originalId,jdbcType=INTEGER},
      TASK_TYPE = #{record.taskType,jdbcType=VARCHAR},
      ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      SUB_ORDER = #{record.subOrder,jdbcType=VARCHAR},
      STAFF_ID = #{record.staffId,jdbcType=INTEGER},
      DEAL_FLAG = #{record.dealFlag,jdbcType=VARCHAR},
      ERROR_TIMES = #{record.errorTimes,jdbcType=INTEGER},
      CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      NEXT_TIME = #{record.nextTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      LOG_TIME = #{record.logTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.order.dao.model.PayQuartzInfoLog" >
    update t_pay_quartz_info_log
    <set >
      <if test="originalId != null" >
        ORIGINAL_ID = #{originalId,jdbcType=INTEGER},
      </if>
      <if test="taskType != null" >
        TASK_TYPE = #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="subOrder != null" >
        SUB_ORDER = #{subOrder,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        STAFF_ID = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="dealFlag != null" >
        DEAL_FLAG = #{dealFlag,jdbcType=VARCHAR},
      </if>
      <if test="errorTimes != null" >
        ERROR_TIMES = #{errorTimes,jdbcType=INTEGER},
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextTime != null" >
        NEXT_TIME = #{nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logTime != null" >
        LOG_TIME = #{logTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.order.dao.model.PayQuartzInfoLog" >
    update t_pay_quartz_info_log
    set ORIGINAL_ID = #{originalId,jdbcType=INTEGER},
      TASK_TYPE = #{taskType,jdbcType=VARCHAR},
      ORDER_ID = #{orderId,jdbcType=VARCHAR},
      SUB_ORDER = #{subOrder,jdbcType=VARCHAR},
      STAFF_ID = #{staffId,jdbcType=INTEGER},
      DEAL_FLAG = #{dealFlag,jdbcType=VARCHAR},
      ERROR_TIMES = #{errorTimes,jdbcType=INTEGER},
      CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      NEXT_TIME = #{nextTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      LOG_TIME = #{logTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>