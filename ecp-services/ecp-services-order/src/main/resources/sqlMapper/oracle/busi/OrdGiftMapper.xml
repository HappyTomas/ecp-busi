<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.order.dao.mapper.busi.OrdGiftMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.order.dao.model.OrdGift" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ORDER_ID" property="orderId" jdbcType="VARCHAR" />
    <result column="ORD_SUB_ID" property="ordSubId" jdbcType="VARCHAR" />
    <result column="FROM_TYPE" property="fromType" jdbcType="VARCHAR" />
    <result column="GIFT_ID" property="giftId" jdbcType="INTEGER" />
    <result column="GIFT_COUNT" property="giftCount" jdbcType="INTEGER" />
    <result column="CREATE_STAFF" property="createStaff" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_STAFF" property="updateStaff" jdbcType="INTEGER" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="GIFT_NAME" property="giftName" jdbcType="OTHER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ORDER_ID, ORD_SUB_ID, FROM_TYPE, GIFT_ID, GIFT_COUNT, CREATE_STAFF, CREATE_TIME, 
    UPDATE_STAFF, UPDATE_TIME, GIFT_NAME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.order.dao.model.OrdGiftCriteria" >
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       select * from (select t_1.*,rownum as row_num from (
    </if>
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_ord_gift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       <![CDATA[ ) t_1 where rownum<=#{limitClauseCount,jdbcType=INTEGER} + #{limitClauseStart,jdbcType=INTEGER}) t_2 where t_2.row_num>#{limitClauseStart,jdbcType=INTEGER}]]>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_ord_gift
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_ord_gift
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zengshi.ecp.order.dao.model.OrdGiftCriteria" >
    delete from t_ord_gift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.order.dao.model.OrdGift" >
    insert into t_ord_gift (ID, ORDER_ID, ORD_SUB_ID, 
      FROM_TYPE, GIFT_ID, GIFT_COUNT, 
      CREATE_STAFF, CREATE_TIME, UPDATE_STAFF, 
      UPDATE_TIME, GIFT_NAME)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{ordSubId,jdbcType=VARCHAR}, 
      #{fromType,jdbcType=VARCHAR}, #{giftId,jdbcType=INTEGER}, #{giftCount,jdbcType=INTEGER}, 
      #{createStaff,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateStaff,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{giftName,jdbcType=OTHER})
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.order.dao.model.OrdGift" >
    insert into t_ord_gift
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="orderId != null" >
        ORDER_ID,
      </if>
      <if test="ordSubId != null" >
        ORD_SUB_ID,
      </if>
      <if test="fromType != null" >
        FROM_TYPE,
      </if>
      <if test="giftId != null" >
        GIFT_ID,
      </if>
      <if test="giftCount != null" >
        GIFT_COUNT,
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="giftName != null" >
        GIFT_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="ordSubId != null" >
        #{ordSubId,jdbcType=VARCHAR},
      </if>
      <if test="fromType != null" >
        #{fromType,jdbcType=VARCHAR},
      </if>
      <if test="giftId != null" >
        #{giftId,jdbcType=INTEGER},
      </if>
      <if test="giftCount != null" >
        #{giftCount,jdbcType=INTEGER},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="giftName != null" >
        #{giftName,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.order.dao.model.OrdGiftCriteria" resultType="java.lang.Long" >
    select count(*) from t_ord_gift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_ord_gift
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.ordSubId != null" >
        ORD_SUB_ID = #{record.ordSubId,jdbcType=VARCHAR},
      </if>
      <if test="record.fromType != null" >
        FROM_TYPE = #{record.fromType,jdbcType=VARCHAR},
      </if>
      <if test="record.giftId != null" >
        GIFT_ID = #{record.giftId,jdbcType=INTEGER},
      </if>
      <if test="record.giftCount != null" >
        GIFT_COUNT = #{record.giftCount,jdbcType=INTEGER},
      </if>
      <if test="record.createStaff != null" >
        CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateStaff != null" >
        UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.giftName != null" >
        GIFT_NAME = #{record.giftName,jdbcType=OTHER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_ord_gift
    set ID = #{record.id,jdbcType=INTEGER},
      ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      ORD_SUB_ID = #{record.ordSubId,jdbcType=VARCHAR},
      FROM_TYPE = #{record.fromType,jdbcType=VARCHAR},
      GIFT_ID = #{record.giftId,jdbcType=INTEGER},
      GIFT_COUNT = #{record.giftCount,jdbcType=INTEGER},
      CREATE_STAFF = #{record.createStaff,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{record.updateStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      GIFT_NAME = #{record.giftName,jdbcType=OTHER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.order.dao.model.OrdGift" >
    update t_ord_gift
    <set >
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="ordSubId != null" >
        ORD_SUB_ID = #{ordSubId,jdbcType=VARCHAR},
      </if>
      <if test="fromType != null" >
        FROM_TYPE = #{fromType,jdbcType=VARCHAR},
      </if>
      <if test="giftId != null" >
        GIFT_ID = #{giftId,jdbcType=INTEGER},
      </if>
      <if test="giftCount != null" >
        GIFT_COUNT = #{giftCount,jdbcType=INTEGER},
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="giftName != null" >
        GIFT_NAME = #{giftName,jdbcType=OTHER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.order.dao.model.OrdGift" >
    update t_ord_gift
    set ORDER_ID = #{orderId,jdbcType=VARCHAR},
      ORD_SUB_ID = #{ordSubId,jdbcType=VARCHAR},
      FROM_TYPE = #{fromType,jdbcType=VARCHAR},
      GIFT_ID = #{giftId,jdbcType=INTEGER},
      GIFT_COUNT = #{giftCount,jdbcType=INTEGER},
      CREATE_STAFF = #{createStaff,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_STAFF = #{updateStaff,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      GIFT_NAME = #{giftName,jdbcType=OTHER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" parameterType="com.zengshi.ecp.order.dao.model.OrdGift" >
    insert into t_ord_gift (ID, 
      ORDER_ID, ORD_SUB_ID, FROM_TYPE, 
      GIFT_ID, GIFT_COUNT, CREATE_STAFF, 
      CREATE_TIME, UPDATE_STAFF, UPDATE_TIME, 
      GIFT_NAME)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.id,jdbcType=INTEGER}, 
      #{item.orderId,jdbcType=VARCHAR}, #{item.ordSubId,jdbcType=VARCHAR}, #{item.fromType,jdbcType=VARCHAR}, 
      #{item.giftId,jdbcType=INTEGER}, #{item.giftCount,jdbcType=INTEGER}, #{item.createStaff,jdbcType=INTEGER}, 
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateStaff,jdbcType=INTEGER}, #{item.updateTime,jdbcType=TIMESTAMP}, 
      #{item.giftName,jdbcType=OTHER})</foreach>
  </insert>
</mapper>