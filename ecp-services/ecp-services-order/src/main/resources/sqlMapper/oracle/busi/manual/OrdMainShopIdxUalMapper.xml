<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.order.dao.mapper.busi.manual.OrdMainShopIdxUalMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.order.dao.model.OrdMainShopIdx" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="SHOP_ID" property="shopId" jdbcType="INTEGER" />
    <result column="STAFF_ID" property="staffId" jdbcType="INTEGER" />
    <result column="ORDER_TIME" property="orderTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="ORDER_ID" property="orderId" jdbcType="VARCHAR" />
    <result column="SITE_ID" property="siteId" jdbcType="INTEGER" />
    <result column="SYS_TYPE" property="sysType" jdbcType="VARCHAR" />
    <result column="INVOICE_TYPE" property="invoiceType" jdbcType="VARCHAR" />
    <result column="CONTACT_NAME" property="contactName" jdbcType="VARCHAR" />
    <result column="CONTACT_PHONE" property="contactPhone" jdbcType="VARCHAR" />
    <result column="DISPATCH_TYPE" property="dispatchType" jdbcType="VARCHAR" />
    <result column="ORDER_TWO_STATUS" property="orderTwoStatus" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="StaffResultMap" type="com.zengshi.ecp.order.dubbo.dto.OrdMainShopUal" >
    <result column="STAFF_ID" property="staffId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, SHOP_ID, STAFF_ID, ORDER_TIME, STATUS, ORDER_ID, SITE_ID, SYS_TYPE, INVOICE_TYPE, 
    CONTACT_NAME, CONTACT_PHONE, DISPATCH_TYPE, ORDER_TWO_STATUS
  </sql>
  <select id="selectStaffTradeTimesByExample" resultMap="StaffResultMap" parameterType="com.zengshi.ecp.order.dubbo.dto.ROrdStaffTradeInfoReq" >
    select * from (
    	select STAFF_ID, count(1) as dealNum 
    	from t_ord_main_shop_idx
    	where shop_id = #{shopId} group by staff_id
    ) t where t.dealNum >= #{dealNum} order by t.staff_id
  </select>
</mapper>